{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Lookup_WatermarkTable",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Watermark_Source",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Lookup_FileSource",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select max(LastModifyTime) as LatestDate from File_Source",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQL_Source",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup_WatermarkTable",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Lookup_FileSource",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from File_Source\nwhere LastModifytime > \t'@{activity('Lookup_WatermarkTable').output.firstRow.WatermarkValue}'\n\t\tand\n\t  LastModifytime <= '@{activity('Lookup_FileSource').output.firstRow.LatestDate}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_File_Source",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_Destination",
						"type": "DatasetReference",
						"parameters": {
							"fileName": {
								"value": "@concat('File=',pipeline().RunId)",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-11-22T13:21:18Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}